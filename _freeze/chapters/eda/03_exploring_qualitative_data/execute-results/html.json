{
  "hash": "a044c57d45a54101addd83508e16b366",
  "result": {
    "engine": "knitr",
    "markdown": "# Esplorare i dati qualitativi {#sec-eda-qualitative-data}\n\n::: {.epigraph}\n> “The greatest value of a picture is when it forces us to notice what we never expected to see.”\n>\n> -- **John W. Tukey**, *Exploratory Data Analysis*\n:::\n\n## Introduzione {.unnumbered .unlisted}\n\nIn questo capitolo ci concentreremo sull’analisi esplorativa dei dati (*Exploratory Data Analysis*, EDA) applicata ai dati qualitativi e categoriali [@tukey1977exploratory]. In psicologia la raccolta di dati qualitativi e categoriali è estremamente frequente: si pensi alle variabili sociodemografiche (genere, stato civile, livello di istruzione), alle risposte a item a scelta multipla nei questionari, alle diagnosi cliniche, o alle categorie di comportamento osservato in laboratorio. Prima di procedere a modelli complessi, è fondamentale *esplorare questi dati* per comprenderne la struttura, individuare pattern ricorrenti e riconoscere eventuali anomalie.\n\nL’EDA rappresenta il primo passo di ogni studio empirico. Con grafici e tabelle di frequenza possiamo farci un’idea immediata della distribuzione delle risposte, verificare se i dati sono equilibrati tra categorie, e osservare come certe caratteristiche si combinano. Ad esempio, in un’indagine clinica potremmo voler capire se i livelli di ansia riportati dai pazienti variano in base al genere o alla fascia di età; in uno studio sperimentale, se il successo in un compito dipende dalla condizione a cui il partecipante è stato assegnato.\n\nIn questo capitolo impareremo dunque a *esplorare e visualizzare i dati qualitativi*, passando da strumenti descrittivi come le tabelle di frequenza e le percentuali cumulative, fino a grafici più sofisticati (barplot, mosaic plot) che consentono di cogliere a colpo d’occhio le relazioni tra più variabili. L’obiettivo non è soltanto acquisire dimestichezza con le tecniche, ma anche sviluppare un atteggiamento critico, capace di riconoscere i limiti e le potenzialità delle rappresentazioni grafiche quando applicate a dati che riflettono la complessità dell’esperienza psicologica.\n\n\n### Panoramica del capitolo {.unnumbered .unlisted}\n\n- Calcolare proporzioni e organizzare i dati in tabelle di contingenza.\n- Costruire grafici a barre per rappresentare dati qualitativi.\n- Creare visualizzazioni per esplorare le relazioni tra due o più variabili qualitative.\n\n\n::: {.callout-tip collapse=true}\n## Prerequisiti\n- Leggere il capitolo [Exploring categorical data](https://openintro-ims.netlify.app/explore-categorical) di [Introduction to Modern Statistics (2e)](https://openintro-ims.netlify.app) di Mine Çetinkaya-Rundel e Johanna Hardin.\n:::\n\n::: {.callout-caution collapse=true title=\"Preparazione del Notebook\"}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhere::here(\"code\", \"_common.R\") |> \n  source()\n\n# Load packages\nif (!requireNamespace(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(tidyr, viridis, vcd, janitor)\n```\n:::\n\n:::\n\n\n## Il dataset `penguins`\n\nPer fornire esempi pratici, in questo capitolo utilizzeremo il dataset [palmerpenguins](https://allisonhorst.github.io/palmerpenguins/index.html), messo a disposizione da [Allison Horst](https://allisonhorst.com). I dati sono stati raccolti e resi disponibili da [Dr. Kristen Gorman](https://www.uaf.edu/cfos/people/faculty/detail/kristen-gorman.php) e dalla Palmer Station, parte del programma di ricerca ecologica a lungo termine [Long Term Ecological Research Network](https://lternet.edu). Il dataset contiene informazioni su 344 pinguini, appartenenti a 3 diverse specie, raccolte su 3 isole dell'arcipelago di Palmer, in Antartide. Per semplicità, i dati sono organizzati nel file `penguins.csv`.\n\nPossiamo caricare i dati grezzi dal file `penguins.csv` in un data frame con il seguente comando:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nd <- rio::import(here::here(\"data\", \"penguins.csv\"))\n```\n:::\n\n\nEsaminiamo i dati.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nglimpse(d)\n#> Rows: 344\n#> Columns: 8\n#> $ species           <chr> \"Adelie\", \"Adelie\", \"Adelie\", \"Adelie\", \"Adelie\", \"A…\n#> $ island            <chr> \"Torgersen\", \"Torgersen\", \"Torgersen\", \"Torgersen\", …\n#> $ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n#> $ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n#> $ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n#> $ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n#> $ sex               <chr> \"male\", \"female\", \"female\", NA, \"female\", \"male\", \"f…\n#> $ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n```\n:::\n\n\nPer semplicità, rimuoviamo le righe con valori mancanti con la seguente istruzione:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf <- d |>\n  drop_na()\n```\n:::\n\n\n\n## Tabelle di contingenza\n\nUna *tabella di contingenza* è uno strumento che riassume i dati di due variabili categoriali, cioè variabili qualitative che assumono valori in un numero finito di categorie.\nOgni cella della tabella indica quante osservazioni ricadono in una specifica combinazione di categorie delle due variabili.\n\nPer esempio, supponiamo di avere due variabili del dataset `df`:\n\n* `island`: l’isola di provenienza dei pinguini,\n* `species`: la specie di appartenenza (Adelie, Chinstrap, Gentoo).\n\nCon la funzione `tabyl()` del pacchetto `janitor` possiamo costruire una tabella che mostra quante osservazioni appartengono a ciascuna combinazione di isola e specie:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf |> \n  tabyl(island, species) |> \n  adorn_totals(c(\"row\", \"col\")) \n#>     island Adelie Chinstrap Gentoo Total\n#>     Biscoe     44         0    119   163\n#>      Dream     55        68      0   123\n#>  Torgersen     47         0      0    47\n#>      Total    146        68    119   333\n```\n:::\n\n\nLa tabella risultante riporta la distribuzione di tre specie di pinguini (Adelie, Chinstrap, Gentoo) rispetto a tre isole (Biscoe, Dream, Torgersen):\n\n* *Isola Biscoe*: sono presenti 44 pinguini *Adelie* e 119 *Gentoo*. Nessun esemplare *Chinstrap*.\n* *Isola Dream*: ospita 55 pinguini *Adelie* e 68 *Chinstrap*, ma nessun *Gentoo*.\n* *Isola Torgersen*: conta solo 47 pinguini *Adelie*, senza esemplari delle altre specie.\n\n\n**Osservazioni:**\n\n1. La specie *Adelie* è l’unica distribuita su tutte e tre le isole (44 su Biscoe, 55 su Dream, 47 su Torgersen).\n2. La specie *Chinstrap* compare esclusivamente su Dream (68 esemplari).\n3. La specie *Gentoo* si trova soltanto su Biscoe (119 esemplari).\n\nQuesta tabella evidenzia che la distribuzione delle specie non è uniforme: alcune sono presenti solo in determinate isole, mentre altre (come gli Adelie) sono più diffuse. In termini di analisi esplorativa, le tabelle di contingenza permettono quindi di *individuare pattern e differenze* tra categorie, fornendo una prima descrizione della relazione tra due variabili qualitative.\n\n\n## Proporzioni di riga e di colonna\n\nFinora ci siamo concentrati sui conteggi assoluti. Tuttavia, in molti casi è più informativo osservare le *proporzioni relative*.\n\n* Le *proporzioni di riga* descrivono come si distribuiscono le categorie di una variabile all’interno di ciascun gruppo dell’altra.\n* Le *proporzioni di colonna*, al contrario, mostrano la distribuzione di una variabile rispetto alle categorie dell’altra.\n\nQuesti calcoli si ottengono facilmente a partire dalla tabella di contingenza.\n\n\n### Proporzioni di riga (specie per isola)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf %>%\n  tabyl(island, species) %>%   # Tabella di contingenza\n  adorn_percentages(\"row\") %>% # Proporzioni rispetto a ciascuna isola\n  adorn_totals(\"col\") %>%      # Totali di riga\n  adorn_pct_formatting(digits = 2)\n#>     island  Adelie Chinstrap Gentoo   Total\n#>     Biscoe  26.99%     0.00% 73.01% 100.00%\n#>      Dream  44.72%    55.28%  0.00% 100.00%\n#>  Torgersen 100.00%     0.00%  0.00% 100.00%\n```\n:::\n\n\nQuesto output mostra, per ogni isola, la percentuale di pinguini appartenenti a ciascuna specie.\n\n\n### Proporzioni di colonna (isole per specie)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf |> \n  tabyl(island, species) |> \n  adorn_percentages(\"col\") |>  # Proporzioni rispetto a ciascuna specie\n  adorn_totals(\"row\") |> \n  adorn_pct_formatting(digits = 2)\n#>     island  Adelie Chinstrap  Gentoo\n#>     Biscoe  30.14%     0.00% 100.00%\n#>      Dream  37.67%   100.00%   0.00%\n#>  Torgersen  32.19%     0.00%   0.00%\n#>      Total 100.00%   100.00% 100.00%\n```\n:::\n\n\nQui vediamo, per ciascuna specie, su quali isole si distribuiscono i pinguini e con quale proporzione.\n\nIn sintesi, le *proporzioni di riga e colonna* forniscono un dettaglio numerico che aiuta a interpretare meglio le relazioni tra le variabili categoriali.\n\n\n## Grafici a barre\n\nI *grafici a barre* sono uno degli strumenti più utilizzati per rappresentare visivamente i dati categoriali. Essi consentono di confrontare le frequenze delle categorie in modo immediato, mostrando chiaramente quali valori sono più comuni o più rari nel campione.\n\n\n### Grafico a barre con una variabile\n\nNel caso più semplice, un grafico a barre rappresenta una sola variabile categoriale.\nLe categorie sono riportate lungo un asse (di solito l’asse orizzontale) e la lunghezza o altezza delle barre è proporzionale al numero di osservazioni per ciascuna categoria.\n\nAd esempio, per i dati sui pinguini possiamo visualizzare il numero totale di esemplari osservati in ciascuna isola:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(df, aes(x = island)) +\n  geom_bar() +\n  xlab(\"Isola\") +\n  ylab(\"Numero di pinguini\") \n```\n\n::: {.cell-output-display}\n![](03_exploring_qualitative_data_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\nAllo stesso modo, possiamo costruire un grafico a barre che mostra la distribuzione delle specie:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(df, aes(x = species)) +\n  geom_bar() +\n  xlab(\"Specie\") +\n  ylab(\"Numero di pinguini\")\n```\n\n::: {.cell-output-display}\n![](03_exploring_qualitative_data_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\nQuesti grafici permettono di confrontare rapidamente le frequenze delle categorie, mettendo in evidenza quali specie o quali isole sono più rappresentate.\n\n\n### Grafico a barre con due variabili\n\nUn grafico a barre può essere esteso per visualizzare *simultaneamente due variabili categoriali*.\nIn questo caso, una variabile viene posta sull’asse delle ascisse, mentre la seconda è distinta tramite colori diversi o barre impilate.\n\nAd esempio, possiamo osservare come le diverse specie di pinguini si distribuiscono sulle isole:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(df, aes(x = island, fill = species)) +\n  geom_bar(position = \"stack\") +\n  xlab(\"Isola\") +\n  ylab(\"Numero di pinguini\") +\n  labs(fill = \"Specie\") \n```\n\n::: {.cell-output-display}\n![](03_exploring_qualitative_data_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\nOppure, invertendo i ruoli delle due variabili, possiamo rappresentare le specie sull’asse delle ascisse e distinguere le isole tramite colori:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(df, aes(x = species, fill = island)) +\n  geom_bar(position = \"stack\") +\n  xlab(\"Specie\") +\n  ylab(\"Numero di pinguini\") +\n  labs(fill = \"Isola\")\n```\n\n::: {.cell-output-display}\n![](03_exploring_qualitative_data_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\nQuesti grafici permettono di esplorare visivamente l’associazione tra due variabili qualitative.\n\n\n### Frequenze relative\n\nOltre alle frequenze assolute, è spesso utile rappresentare le *frequenze relative* (cioè le proporzioni). Questo approccio elimina l’effetto del numero totale di osservazioni, rendendo più facile confrontare le distribuzioni tra gruppi di dimensioni diverse.\n\nAd esempio, il grafico seguente mostra la composizione relativa delle specie per ogni isola:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(df, aes(x = island, fill = species)) +\n  geom_bar(position = \"fill\") +\n  xlab(\"Isola\") +\n  ylab(\"Proporzione\") +\n  labs(fill = \"Specie\")\n```\n\n::: {.cell-output-display}\n![](03_exploring_qualitative_data_files/figure-html/unnamed-chunk-12-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\nQui ogni barra è normalizzata a 1: l’altezza di ciascun segmento rappresenta la proporzione di una specie all’interno dell’isola. In questo modo è più facile capire *quale specie prevale in ciascun contesto*, indipendentemente dal numero complessivo di pinguini osservati.\n\n\n## Mosaic plot\n\nIl *Mosaic plot* è una tecnica di visualizzazione particolarmente adatta per rappresentare le *tabelle di contingenza*. A differenza di un semplice grafico a barre impilate, questo tipo di grafico mostra contemporaneamente:\n\n1. la *distribuzione interna* delle categorie di una variabile,\n2. la *dimensione relativa complessiva* dei gruppi della variabile principale.\n\nIn pratica, non ci dice solo *come* le categorie si suddividono all’interno dei gruppi, ma anche *quanto grandi* sono i gruppi stessi.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmosaic(\n  ~ species + island, \n  data = df, \n  main = \"Mosaic Plot of Species and Island\",\n  shade = TRUE\n)\n```\n\n::: {.cell-output-display}\n![](03_exploring_qualitative_data_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\n**Come leggere un mosaic plot.**\n\n* *Dimensioni dei rettangoli*\n\n  * La *larghezza* rappresenta la dimensione relativa dei gruppi della variabile principale (`island`).\n  * L’*altezza* indica la proporzione delle categorie della variabile secondaria (`species`) all’interno di ciascun gruppo.\n\n* *Colori (opzione `shade = TRUE`)*\n\n  * I colori evidenziano deviazioni dalle frequenze attese in caso di indipendenza statistica.\n  * Un colore scuro segnala che in quel gruppo la frequenza osservata è molto diversa da quella attesa sotto indipendenza.\n\n* *Interpretazione pratica*\n\n  * Un *rettangolo largo e alto* segnala una categoria numerosa in un gruppo consistente.\n  * Un *rettangolo stretto o sottile* indica una categoria rara o assente in quel gruppo.\n\nIn questo esempio, vediamo chiaramente che:\n\n* gli *Adelie* sono presenti in tutte le isole,\n* i *Chinstrap* compaiono solo a Dream,\n* i *Gentoo* solo a Biscoe.\n\nIl Mosaic plot è quindi utile per cogliere *schemi di associazione* tra variabili categoriali e valutare rapidamente quali combinazioni sono predominanti o assenti.\n\n\n## Confronto tra gruppi\n\nUn aspetto centrale dell’analisi esplorativa consiste nel *confrontare gruppi diversi*. Questo ci permette di mettere in evidenza differenze e somiglianze, osservare variazioni e individuare tendenze. Il confronto può riguardare:\n\n1. *variabili categoriali tra loro* (ad esempio distribuzione di genere nelle diverse specie), oppure\n2. *variabili numeriche rispetto a categorie* (ad esempio come varia il peso corporeo tra specie e generi).\n\n\n### Confronto tra variabili categoriali\n\nPer confrontare due variabili qualitative, possiamo utilizzare un grafico a barre con suddivisione per gruppi. Ad esempio, vediamo come si distribuisce il *genere* dei pinguini (maschio/femmina) all’interno delle tre specie:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(df, aes(x = species, fill = sex)) +\n  geom_bar(position = \"dodge\") +\n  xlab(\"Specie\") +\n  ylab(\"Conteggio\")\n```\n\n::: {.cell-output-display}\n![](03_exploring_qualitative_data_files/figure-html/unnamed-chunk-14-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\nIn questo grafico le barre affiancate permettono di confrontare facilmente, per ciascuna specie, il numero di maschi e femmine.\n\n\n### Confronto tra variabili numeriche e categorie\n\nSpesso è ancora più interessante osservare *come una variabile numerica varia tra gruppi*. Questo approccio ci consente di capire se gruppi diversi tendono ad avere valori simili o differenti. Prendiamo come esempio la variabile `body_mass_g` (peso corporeo in grammi), e confrontiamola in base a *specie* e *genere*.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(df, aes(x = species, y = body_mass_g, fill = sex)) +\n  geom_violin(\n    position = position_dodge(width = 0.9), alpha = 0.5\n  ) +\n  geom_boxplot(\n    position = position_dodge(width = 0.9), width = 0.2, alpha = 0.8\n  ) +\n  xlab(\"Specie\") +\n  ylab(\"Massa corporea (g)\") +\n  labs(fill = \"Genere\")\n```\n\n::: {.cell-output-display}\n![](03_exploring_qualitative_data_files/figure-html/unnamed-chunk-15-1.png){fig-align='center' width=85%}\n:::\n:::\n\n\nQuesto grafico combina due livelli di informazione:\n\n1. *Grafico a violino (aree colorate)*\n\n   * Mostra l’intera distribuzione dei pesi per ciascun gruppo (specie × genere).\n   * Più l’area è larga in un punto, più pinguini hanno un peso vicino a quel valore.\n\n2. *Boxplot (linee centrali)*\n\n   * Riassume visivamente i dati, mostrando mediana, quartili e variabilità.\n   * Aiuta a confrontare rapidamente i livelli tipici e la dispersione tra gruppi.\n\n\nDa questo tipo di grafico possiamo osservare:\n\n* *Differenze tra generi all’interno di una specie*: ad esempio, se i maschi tendono a essere più pesanti delle femmine.\n* *Differenze tra specie*: quali specie hanno in generale pinguini più pesanti o più leggeri.\n* *Sovrapposizioni*: se i pesi di maschi e femmine si distinguono nettamente o se i due gruppi hanno valori simili.\n\nIn questo modo, possiamo individuare sia differenze sistematiche sia aree di variabilità comune tra i gruppi.\n\n\n\n::: {.callout-important title=\"Problemi\" collapse=\"true\"}\nIn questo esercizio analizzerai i dati qualitativi raccolti mediante la scala SWLS, concentrandoti su due variabili categoriali:\n\n1. **Genere** (`gender`): maschio / femmina.\n2. **Tipo di scuola superiore** (`school_type`): liceo classico o scientifico vs tutto il resto.\n\nDovrai creare tabelle di contingenza e rappresentazioni grafiche per esplorare le relazioni tra queste variabili.\n\n**Importazione dei dati**\n\nImporta i dati da un file CSV e visualizza la loro struttura.\n\n```r\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(here)\n\n# Importa i dati\nswls_data <- read_csv(here(\"data\", \"swls_students.csv\"))\n\n# Esamina i dati\nglimpse(swls_data)\n```\n\n**Tabelle di Contingenza**\n\n1. Crea una tabella di contingenza tra `gender` e `school_type`.\n2. Calcola le proporzioni di riga e colonna.\n\n```r\n# Tabella di contingenza\nswls_data |> \n  tabyl(gender, school_type) |> \n  adorn_totals(c(\"row\", \"col\"))\n```\n\nCalcola ora le proporzioni relative.\n\n```r\n# Proporzioni di riga\nswls_data |> \n  tabyl(gender, school_type) |> \n  adorn_percentages(\"row\") |> \n  adorn_pct_formatting(digits = 2)\n```\n\n```r\n# Proporzioni di colonna\nswls_data |> \n  tabyl(gender, school_type) |> \n  adorn_percentages(\"col\") |> \n  adorn_pct_formatting(digits = 2)\n```\n\n**Visualizzazione Grafica**\n\n1. Crea un grafico a barre per visualizzare il numero di studenti per tipo di scuola.\n2. Crea un grafico a barre per la distribuzione del genere per tipo di scuola.\n\n```r\nggplot(swls_data, aes(x = school_type)) +\n  geom_bar() +\n  ggtitle(\"Numero di studenti per tipo di scuola\") +\n  xlab(\"Tipo di scuola\") +\n  ylab(\"Numero di studenti\")\n```\n\n```r\nggplot(swls_data, aes(x = school_type, fill = gender)) +\n  geom_bar(position = \"dodge\") +\n  ggtitle(\"Distribuzione del genere per tipo di scuola\") +\n  xlab(\"Tipo di scuola\") +\n  ylab(\"Numero di studenti\") +\n  labs(fill = \"Genere\")\n```\n\n**Domande per la riflessione**\n\n- Quale tipo di scuola ha il maggior numero di studenti?\n- Ci sono differenze nella distribuzione del genere tra i tipi di scuola?\n\n**Consegna**\n\n- Compila il file `.qmd` con il tuo codice e commenti.\n- Esporta il documento in formato HTML o PDF.\n- Carica il file su Moodle.\n:::\n\n::: {.callout-note collapse=true title=\"Informazioni sull'ambiente di sviluppo\"}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsessionInfo()\n#> R version 4.5.1 (2025-06-13)\n#> Platform: aarch64-apple-darwin20\n#> Running under: macOS Sequoia 15.6.1\n#> \n#> Matrix products: default\n#> BLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib \n#> LAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1\n#> \n#> locale:\n#> [1] C/UTF-8/C/C/C/C\n#> \n#> time zone: Europe/Rome\n#> tzcode source: internal\n#> \n#> attached base packages:\n#> [1] grid      stats     graphics  grDevices utils     datasets  methods  \n#> [8] base     \n#> \n#> other attached packages:\n#>  [1] vcd_1.4-13            viridis_0.6.5         viridisLite_0.4.2    \n#>  [4] pillar_1.11.0         tinytable_0.13.0      patchwork_1.3.2      \n#>  [7] ggdist_3.3.3          tidybayes_3.0.7       bayesplot_1.14.0     \n#> [10] ggplot2_3.5.2         reliabilitydiag_0.2.1 priorsense_1.1.1     \n#> [13] posterior_1.6.1       loo_2.8.0             rstan_2.32.7         \n#> [16] StanHeaders_2.32.10   brms_2.22.0           Rcpp_1.1.0           \n#> [19] sessioninfo_1.2.3     conflicted_1.2.0      janitor_2.2.1        \n#> [22] matrixStats_1.5.0     modelr_0.1.11         tibble_3.3.0         \n#> [25] dplyr_1.1.4           tidyr_1.3.1           rio_1.2.3            \n#> [28] here_1.0.1           \n#> \n#> loaded via a namespace (and not attached):\n#>  [1] gridExtra_2.3         inline_0.3.21         sandwich_3.1-1       \n#>  [4] rlang_1.1.6           magrittr_2.0.3        multcomp_1.4-28      \n#>  [7] snakecase_0.11.1      compiler_4.5.1        systemfonts_1.2.3    \n#> [10] vctrs_0.6.5           stringr_1.5.1         pkgconfig_2.0.3      \n#> [13] arrayhelpers_1.1-0    fastmap_1.2.0         backports_1.5.0      \n#> [16] labeling_0.4.3        rmarkdown_2.29        ragg_1.5.0           \n#> [19] purrr_1.1.0           xfun_0.53             cachem_1.1.0         \n#> [22] jsonlite_2.0.0        broom_1.0.9           parallel_4.5.1       \n#> [25] R6_2.6.1              stringi_1.8.7         RColorBrewer_1.1-3   \n#> [28] lmtest_0.9-40         lubridate_1.9.4       estimability_1.5.1   \n#> [31] knitr_1.50            zoo_1.8-14            R.utils_2.13.0       \n#> [34] pacman_0.5.1          Matrix_1.7-4          splines_4.5.1        \n#> [37] timechange_0.3.0      tidyselect_1.2.1      abind_1.4-8          \n#> [40] yaml_2.3.10           codetools_0.2-20      curl_7.0.0           \n#> [43] pkgbuild_1.4.8        lattice_0.22-7        withr_3.0.2          \n#> [46] bridgesampling_1.1-2  coda_0.19-4.1         evaluate_1.0.5       \n#> [49] survival_3.8-3        RcppParallel_5.1.11-1 tensorA_0.36.2.1     \n#> [52] checkmate_2.3.3       stats4_4.5.1          distributional_0.5.0 \n#> [55] generics_0.1.4        rprojroot_2.1.1       rstantools_2.5.0     \n#> [58] scales_1.4.0          xtable_1.8-4          glue_1.8.0           \n#> [61] emmeans_1.11.2-8      tools_4.5.1           data.table_1.17.8    \n#> [64] mvtnorm_1.3-3         QuickJSR_1.8.0        colorspace_2.1-1     \n#> [67] nlme_3.1-168          cli_3.6.5             textshaping_1.0.3    \n#> [70] svUnit_1.0.8          Brobdingnag_1.2-9     V8_7.0.0             \n#> [73] gtable_0.3.6          R.methodsS3_1.8.2     digest_0.6.37        \n#> [76] TH.data_1.1-4         htmlwidgets_1.6.4     farver_2.1.2         \n#> [79] R.oo_1.27.1           memoise_2.0.1         htmltools_0.5.8.1    \n#> [82] lifecycle_1.0.4       MASS_7.3-65\n```\n:::\n\n:::\n\n## Bibliografia {.unnumbered .unlisted} \n\n",
    "supporting": [
      "03_exploring_qualitative_data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}